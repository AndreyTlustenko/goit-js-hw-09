{"mappings":"YACA,IAAMA,EAAUC,SAASC,cAAc,QACjCC,EAAYF,SAASG,iBAAiB,SACtCC,EAAWF,EAAU,GACrBG,EAAWH,EAAU,GACrBI,EAAYJ,EAAU,GACXF,SAASC,cAAc,UAkBxCF,EAAQQ,iBAAiB,SAAS,WAChC,IAAMC,EAAQC,SAASL,EAASM,OAC1BC,EAAOF,SAASJ,EAAQK,OACxBE,EAASH,SAASH,EAAUI,OAEnCX,EAAQQ,iBAAiB,UAAU,SAACM,GAClCA,EAAMC,iBACNC,QAAQC,IAAIR,EAAOG,EAAMC,GAC1B,IAAK,IAAIK,EAAI,EAAGA,GAAKL,EAAO,EAAGK,GAAG,GAnBFC,EAoBdV,OAnBbW,YAAW,WAGd,GAF0BC,KAAKC,SAAW,GAEnB,OAAO,IAAIC,QAASC,QAASC,O,GAIrDN,IAaAO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MACjBH,QAAQC,IAAI,uBAAwCY,OAAfD,EAAS,QAAYC,OAANV,EAAM,M,IAE3DW,OAAM,SAAAH,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MAClBH,QAAQC,IAAI,sBAAqCY,OAAfD,EAAS,QAAYC,OAANV,EAAM,M,IAEzDV,GAASG,EA3BV,IAAiCO,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst refForm = document.querySelector(\"form\");\nconst refInputs = document.querySelectorAll(\"input\");\nconst delayRef = refInputs[0];\nconst stepRef =  refInputs[1];\nconst amountRef = refInputs[2];\nconst btnSubmit= document.querySelector(\"button\");\n// btnSubmit.addEventListener('click', createPromise);\n\n// let getEl = selector => document.querySelector(selector);\n// getEl('.form')\n\n// const Promise = new Promise((resolve, reject) => { \n function createPromise(position, delay) {\n       setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n    \n    if (shouldResolve) {   return new Promise (resolve, reject)\n      // Promise.resolve({ position, delay});\n  } return\n      // Promise.reject({ position, delay});\n}, delay);\n};\n\nrefForm.addEventListener(\"input\", () => {\n  const delay = parseInt(delayRef.value);\n  const step = parseInt(stepRef.value);\n  const amount = parseInt(amountRef.value);\n\n refForm.addEventListener(\"submit\", (event) =>{\n   event.preventDefault();\n   console.log(delay, step, amount)\n  for (let i = 0; i <= amount-1; i+=1) {\n   createPromise(i, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }); \n  delay += step\n    };\n })\n}); \n\n\n\n"],"names":["$ce04d3a99e08e73b$var$refForm","document","querySelector","$ce04d3a99e08e73b$var$refInputs","querySelectorAll","$ce04d3a99e08e73b$var$delayRef","$ce04d3a99e08e73b$var$stepRef","$ce04d3a99e08e73b$var$amountRef","addEventListener","delay1","parseInt","value","step","amount","event","preventDefault","console","log","i","delay","setTimeout","Math","random","Promise","resolve","reject","then","param","position","concat","catch"],"version":3,"file":"03-promises.af695c85.js.map"}